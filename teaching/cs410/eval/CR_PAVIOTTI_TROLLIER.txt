Bonjour,

Voici un retour sur votre compilateur et vos tests.

Nous évaluons d'une part le compilateur (à l'aide d'un jeu de tests) et 
d'autre part, de façon indépendante, votre jeux de tests pour la passe 2.

Les tests sont évalués par une mesure de couverture sur un compilateur 
de référence et également à l'aide de "mutants". Un mutant est un compilateur
pour le langage JCas qui comporte exactement un bug. 
Nous disposons de 46 mutants.
Pour chaque mutant, on examine si votre jeu de tests permet ou non 
de détecter le bug correspondant. Si c'est le cas, on dit que le jeu 
de tests "tue" le mutant. L'objectif est donc de tuer le maximum de mutants.

Remarque 
Dans la partie sur les mutants, une phrase du type
   "ne teste pas XXX" 
ne signifie pas que vous ne testez pas du tout le point XXX, mais que
vous ne le testez pas suffisamment. Plus précisément, nous avons un compilateur qui comporte un bug concernant le point XXX et votre jeu de tests n'a pas 
permis de le mettre en évidence. 

Cordialement,

Les enseignants du projet Compilation

=============================================================================
I. Compilateur

Nombre d'erreurs en passe 2 : 9
Nombre d'erreurs concernant des numéros de ligne : 2

Exemples de programmes provoquant une défaillance :

-------------------------------
program  
   r : real ;
begin
   r := 3 div 2.5 ;
end.
-------------------------------
program  

begin
   if 1 then 
      null ; 
   end ; 
end. 
-------------------------------
program  
   
begin
   for integer := 1 to 10 do 
      null ; 
   end ;  
end.
--------------------------------

=============================================================================
Nombre d'erreurs de décors : 6
 - Décor incorrect sur un Noeud.Index
 - Décor nul sur expression binaire
 - Décor nul sur identificateur (utilisation)
 - Defn nulle sur identificateur (utilisation)
 - Type incorrect dans defn sur identificateur (déclaration)
 - Type incorrect dans une place


=============================================================================
II. Tests

Mutants tués : 40 / 46
 - Ne teste pas la compatibilite arithmetique autre-autre (autre=bool/string/tab)
 - Ne teste pas la compatibilite arithmetique interval-autre (autre=bool/string/tab)
 - Ne teste pas si le type de l'indice est un intervalle dans une indexation
 - Ne teste pas la compatibilite du type des elements pour la compatibilite des types tableaux
 - Ne teste pas la compatibilite pour la division reelle
 - Ne teste pas la valeur du moins unaire dans les expressions constantes

=============================================================================

